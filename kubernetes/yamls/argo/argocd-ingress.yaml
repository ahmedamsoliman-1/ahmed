# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-ingress
#   namespace: argocd
#   annotations:
#     cert-manager.io/cluster-issuer: "letsencrypt-prod" # Use your ClusterIssuer name
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     kubernetes.io/ingress.class: "nginx"
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: argocd.ahmedalimsoliman.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: argocd-server
#             port:
#               number: 80
#   tls:
#   - hosts:
#     - argocd.ahmedalimsoliman.com # Replace with your actual domain
#     secretName: argocd-tls # This secret will be created by cert-manager
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  rules:
  - host: argocd.ahmedalimsoliman.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 8080
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: argocd-server-metrics
            port:
              number: 8083
      - path: /applications
        pathType: Prefix
        backend:
          service:
            name: argocd-applicationset-controller
            port:
              number: 7000
  tls:
  - hosts:
    - argocd.ahmedalimsoliman.com
    secretName: argocd-cert-tls
