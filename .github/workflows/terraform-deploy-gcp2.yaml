name: terraform-deploy-gcp2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - master
    
jobs:
  # # # # # GCP Bucket
  terraform-deploy-prepare:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.2

  # # # # # GCP Bucket
  terraform-deploy-aams-bucket:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./IasC/terraform/gcp/buckets/aams-terraform-hcp
    needs: terraform-deploy-prepare

    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     terraform_version: 1.9.2

    - name: Terraform Init
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

    - name: Terraform Plan
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push'
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform apply -auto-approve

  # # # # # GCP Cloud DNS
  terraform-deploy-aams-gcp2-dns2:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./IasC/terraform/gcp/dns
    needs: terraform-deploy-prepare
    
    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     terraform_version: 1.9.2
        

    - name: Terraform Init
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

    - name: Terraform Plan
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push'
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform apply -auto-approve

  # # # # # GCP GKE
  terraform-deploy-aams-gcp2-gke2:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./IasC/terraform/gcp/gke/aams-dev-gke-1
    needs: terraform-deploy-prepare

    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     terraform_version: 1.9.2
        

    - name: Terraform Init
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

    - name: Terraform Plan
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push'
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform apply -auto-approve

  # # # # # GCP VM
  terraform-deploy-aams-gcp2-vm2:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./IasC/terraform/gcp/vm/dev-vm-2
    needs: terraform-deploy-prepare

    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     terraform_version: 1.9.2
        

    - name: Terraform Init
      working-directory: ./IasC/terraform/gcp/vm/dev-vm-2
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

    - name: Terraform Plan
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push'
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform apply -auto-approve