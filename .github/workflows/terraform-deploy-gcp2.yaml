name: terraform-gcp-gcp2-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - master
    
jobs:
  # # # # # GCP Bucket
  terraform-prepare-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.2

    - name: Check terraform
      run: |
        terraform -version
  
  enable-google-cloud-apis-gcp2:
    runs-on: ubuntu-latest
    needs: terraform-prepare-deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'

    - name: Authenticate with Google Cloud
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP2_CREDENTIALS }}
      run: |
        echo "${GOOGLE_APPLICATION_CREDENTIALS}" > $HOME/gcloud-key.json
        gcloud auth activate-service-account --key-file=$HOME/gcloud-key.json

    - name: Set project
      run: gcloud config set project ${{ secrets.GCP2_PROJECT_ID }}

    - name: Enable Compute Engine API
      run: gcloud services enable compute.googleapis.com

    - name: Enable Kubernetes Engine API
      run: gcloud services enable container.googleapis.com

    - name: Enable IAM API
      run: gcloud services enable iam.googleapis.com

    - name: Enable Cloud Storage API
      run: gcloud services enable storage.googleapis.com
    
    - name: Enable DNS API
      run: gcloud services enable dns.googleapis.com


  # # # # # # GCP Bucket
  # terraform-gcp-gcp2-bucket-deploy:
  #   runs-on: ubuntu-latest
  #   needs: enable-google-cloud-apis-gcp2
  #   defaults:
  #     run:
  #       working-directory: ./IasC/terraform/GCP/buckets/aams-terraform-gcp-star-bucket    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v3
  #     with:
  #       terraform_version: 1.9.2

  #   - name: Terraform Init
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

  #   - name: Terraform Plan
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform plan

  #   - name: Terraform Apply
  #     if: github.event_name == 'push'
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform apply -auto-approve
  
  # subsequent-bucket:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-bucket-deploy

  #   steps:
  #     - name: Testing
  #       run: pwd

  # subsequent-bucket-2:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-bucket-deploy

  #   steps:
  #     - name: Testing
  #       run: pwd



  # # # # # # GCP Cloud DNS
  # terraform-gcp-gcp2-dns-aamsdn-com-deploy:
  #   runs-on: ubuntu-latest
  #   needs: enable-google-cloud-apis-gcp2
  #   defaults:
  #     run:
  #       working-directory: ./IasC/terraform/GCP/dns/aamsdn

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v3
  #     with:
  #       terraform_version: 1.9.2
        
  #   - name: Terraform Init
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

  #   - name: Terraform Plan
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform plan

  #   - name: Terraform Apply
  #     if: github.event_name == 'push'
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform apply -auto-approve
  

  # terraform-gcp-gcp2-dns-aamsdn-com-registeration:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-dns-aamsdn-com-deploy
  #   defaults:
  #     run:
  #       working-directory: ./IasC/terraform/GCP/dns/aamsdn-registeration

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v3
  #     with:
  #       terraform_version: 1.9.2
        
  #   - name: Terraform Init
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

  #   - name: Terraform Plan
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform plan

  #   # - name: Terraform Apply
  #   #   if: github.event_name == 'push'
  #   #   env:
  #   #     TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #   #   run: terraform apply -auto-approve
  
  # subsequent-dns:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-dns-aamsdn-com-registeration

  #   steps:
  #     - name: Testing
  #       run: pwd
  # subsequent-dns-2:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-dns-aamsdn-com-registeration

  #   steps:
  #     - name: Testing
  #       run: pwd

  # # # # # # GCP GKE
  # terraform-gcp-gcp2-gke3-deploy:
  #   runs-on: ubuntu-latest
  #   needs: enable-google-cloud-apis-gcp2
  #   defaults:
  #     run:
  #       working-directory: ./IasC/terraform/GCP/gke/gke3

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v3
  #     with:
  #       terraform_version: 1.9.2
        
  #   - name: Terraform Init
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

  #   - name: Terraform Plan
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform plan

  #   - name: Terraform Apply
  #     if: github.event_name == 'push'
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform apply -auto-approve

  # subsequent-gke:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-gke3-deploy

  #   steps:
  #     - name: Testing
  #       run: pwd
  # subsequent-gke-2:
  #   runs-on: ubuntu-latest
  #   needs: terraform-gcp-gcp2-gke3-deploy

  #   steps:
  #     - name: Testing
  #       run: pwd