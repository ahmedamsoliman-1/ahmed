name: terraform-gcp-big-star

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    
jobs:
  # # # # # GCP Bucket
  terraform-prepare-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.2

    - name: Check terraform
      run: |
        terraform -version


  # # # # # GCP Bucket
  terraform-gcp-big-star-bucket-deploy:
    runs-on: ubuntu-latest
    needs: terraform-prepare-deploy
    defaults:
      run:
        working-directory: ./IasC/terraform/GCP/buckets/aams-terraform-gcp-star-bucket    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.2

    - name: Terraform Init
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

    - name: Terraform Plan
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push'
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform apply -auto-approve




  # # # # # GCP Cloud DNS
  terraform-gcp-big-star-dns-aamsdn-com-deploy:
    runs-on: ubuntu-latest
    needs: terraform-prepare-deploy
    defaults:
      run:
        working-directory: ./IasC/terraform/GCP/dns/aamsdn

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.2
        
    - name: Terraform Init
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

    - name: Terraform Plan
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push'
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      run: terraform apply -auto-approve

  # # # # # # GCP GKE
  # terraform-gcp2-gke2-deploy:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./IasC/terraform/GCP/gke/aams-dev-gke-1

  #   needs: terraform-prepare-deploy
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_version: 1.9.2
        

  #   - name: Terraform Init
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

  #   - name: Terraform Plan
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform plan

  #   - name: Terraform Apply
  #     if: github.event_name == 'push'
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform apply -auto-approve

  # # # # # # GCP VM
  # terraform-gcp2-vm2-deploy:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./IasC/terraform/GCP/vm/dev-vm-2

  #   needs: terraform-prepare-deploy
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_version: 1.9.2
        

  #   - name: Terraform Init
  #     working-directory: ./IasC/terraform/GCP/vm/dev-vm-2
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"

  #   - name: Terraform Plan
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform plan

  #   - name: Terraform Apply
  #     if: github.event_name == 'push'
  #     env:
  #       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  #     run: terraform apply -auto-approve